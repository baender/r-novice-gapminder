% Software carpentry Workshop GFZ Potsdam, May 2017. R Workshop parts by Berry
% Berry Boessenkool, Potsdam University, Germany
% berry-b@gmx.de

\documentclass[compress, handout, xcolor=dvipsnames]{beamer}
\setbeamerfont{frametitle}{size=\normalsize}

\usepackage{hyperref, graphicx, tabu}
\usepackage[dvipsnames]{xcolor}
\renewcommand\appendixname{Appendix}
\usepackage[absolute,overlay]{textpos}
\hypersetup{colorlinks=true, linkcolor=blue, urlcolor=blue}
% \beamertemplatenavigationsymbolsempty
\setbeamertemplate{navigation symbols}[only frame symbol]
%\usetheme{Madrid}
\useoutertheme[subsection=false]{miniframes}
\beamersetleftmargin{0.5cm}
\beamersetrightmargin{0.5cm}
\let\Tiny=\tiny % avoid warning: Font shape `OT1/cmss/m/n' in size <4> not available. size <5> substituted on input line
\setbeamertemplate{footline}[frame number]

\beamersetleftmargin{0.3cm}
\beamersetrightmargin{0.3cm}

% Reference images:
\newcommand{\bildlink}[1]{\flushleft{\tiny \href{#1}{\textcolor{gray}{#1}} \normalsize }}
\newcommand{\bildlinkt}[2]{\flushleft{\tiny \href{#1}{\textcolor{gray}{#2}} \normalsize }}
% format inline R command names in blue courier:
\newcommand{\rcode}[1]{\texttt{\textcolor{Blue}{#1}}} % or use Blue

% Nice appendix numbering:
\newcommand{\appendixbegin}{
   \newcounter{framenumberappendix}
   \setcounter{framenumberappendix}{\value{framenumber}}
}
\newcommand{\appendixend}{
   \addtocounter{framenumberappendix}{-\value{framenumber}}
   \addtocounter{framenumber}{\value{framenumberappendix}}
}



% ACTUAL SLIDES %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}

% ---------------------------

\section{Intro}

% ---------------------------

<<setup, include=FALSE>>=
opts_chunk$set(cache=T, echo=TRUE, fig.show='hold', fig.height=3.3, fig.width=5, out.width='0.9\\textwidth')
# set locale to US, which makes sure that eg month names are in english
# Sys.setlocale("LC_ALL", "US") # Windows
Sys.setlocale("LC_ALL","English")
Sys.setenv(LANG = "en") # english errors and warnings

ThemeBerry <- list(highlight="
\\definecolor{fgcolor}{rgb}{0, 0, 0}
\\newcommand{\\hlnum}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlstr}[1]{\\textcolor[rgb]{0.545,0.137,0.137}{#1}}
\\newcommand{\\hlcom}[1]{\\textcolor[rgb]{0,0.392,0}{\\textit{#1}}}
\\newcommand{\\hlopt}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlstd}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlkwa}[1]{\\textcolor[rgb]{1,0,0}{\\textbf{#1}}}
\\newcommand{\\hlkwb}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlkwc}[1]{\\textcolor[rgb]{1,0,1}{#1}}
\\newcommand{\\hlkwd}[1]{\\textcolor[rgb]{0,0,1}{#1}}
", background="#F5F5F5", foreground="black")
knit_theme$set(ThemeBerry)
rm(ThemeBerry)
@


% ---------------------------

\begin{frame}%[plain]
\begin{center}
\vspace{3em}
\Large
\textbf{R packages \& \\Debugging} \\[2em]
\normalsize
Berry Boessenkool, \href{http://www.geo.uni-potsdam.de/geoecology.html}{uni-potsdam.de} \&\\
Marvin Reich, \href{http://www.gfz-potsdam.de/sektion/hydrologie/mitarbeiter/profil/marvin-reich/}{gfz-potsdam.de}\\May 2017 \\[1em]
\texttt{berry-b@gmx.de}\\
\href{https://github.com/brry}{github.com/brry}\\[1em]
\href{https://swc-bb.github.io/2017-05-17-r-workshop}{swc-bb.github.io/2017-05-17-r-workshop}\\[1em]
\scriptsize
\textit{Presentation template generated with} \rcode{berryFunctions::createPres}\\
\normalsize

\only<2-3>{ % photography note and licence
\begin{textblock*}{8em}(260pt,30pt) % topleft corner x=250pt, y=30pt
\centering
\textblockcolour{Dandelion}
\vspace{0.5em}
\includegraphics[width=3em]{fig_extern/camera2.png}\\
\footnotesize
ENCOURAGED\\[0.5em]%
\onslide<3>{
\includegraphics[width=6em]{fig_extern/ccby.png}\\[-0.3em]
\href{https://creativecommons.org/licenses/by/4.0}{use freely, cite us}%
}
\normalsize
\vspace{0.5em}
\end{textblock*}
}
\end{center}
\end{frame}

% ---------------------------

\begin{frame}{Why R packages}

Marvins Stuff here...\\[1em]

Good introductions linked here:
\href{https://github.com/brry/misc\#package-development-with-rstudio-and-github}{github.com/brry/misc}
\end{frame}

% ---------------------------

\section{Devtools}

% ---------------------------

\begin{frame}[fragile]{Devtools for package structure creation}
<<devtools, eval=FALSE>>=
dir.create("subfolder") # optional
setwd("subfolder")
library(devtools)

create("packageName")
setup() # if repos is initialized on github, see Appendix

check()
@

\pause
Exercise 1: create the package structure
\begin{itemize}
\item Create a package for the linear storage cascade functions we provide.
\item BONUS: Use git from the beginning (see Appendix)
\item Check the package
\item Now add the functions in \href{https://bit.ly/swc_rfun}{bit.ly/swc\_rfun} to the R folder
\end{itemize}
\end{frame}

% ---------------------------

\begin{frame}[fragile]{Solution to Exercise 1: create the package structure}
<<solcreate, eval=FALSE>>=
devtools::create("lsc")
devtools::check()
@
\end{frame}

% ---------------------------

\section{Roxygen}

% ---------------------------

\begin{frame}[fragile]{Roxygen for Documentation}
Rstudio - Code - Insert Roxygen Skeleton (\rcode{CTRL} + \rcode{ALT} + \rcode{SHIFT} + \rcode{R})
\pause

<<document, eval=FALSE>>=
devtools::document() # calls roxygen2::roxygenise()

check() # will also update documentation
install() # install the package locally
@

\pause
Exercise 2: Document functions
\begin{itemize}
\item Document the nse function (we'll do this one together)
\item Create datasets within the package (following instructions in data.R)
\item Document the rmse function
\item Check and install the package
\end{itemize}
\end{frame}

% ---------------------------

\section{Debugging}

% ---------------------------

\begin{frame}[fragile]{Debugging: useful functions}
\begin{tabular}{ll}
\pause source("projectFuns.R") & execute complete file\\
\pause traceback() & find error source in sequence of function calls\\
\pause options(warn=2) & warnings to error. default 0\\
\pause browser() & go into function environment: \rcode{n}, \rcode{s}, \rcode{f}, \rcode{c}, \rcode{Q}\\
\pause \alert{options(error=recover)} & \alert{open interactive session where error occurred}\\
\pause debug(funct) & toggle linewise function execution\\
\pause undebug(funct) & after calling and fixing funct\\
\end{tabular}\\
\pause
\vspace{-0.5em}
<<stopfun, eval=F, size="footnotesize">>=
if(length(input)>1) stop("length must be 1, not ", length(input))
@
\vspace{-1em}
\pause
\rcode{stop}: Interrupts function execution and gives error\\
\rcode{warning}: continues but gives warning\\
\rcode{message}: to inform instead of worry the user\\[1em]
\pause
\href{http://www.biostat.jhsph.edu/~rpeng/docs/R-debug-tools.pdf}{R. Peng (2002): Interactive Debugging Tools in R}\\
\href{http://www.stats.uwo.ca/faculty/murdoch/software/debuggingR/}{D. Murdoch (2010): Debugging in R}\\
\href{http://adv-r.had.co.nz/Exceptions-Debugging.html}{H. Wickham (2015): Advanced R: debugging}\\
Example: \href{https://www.r-bloggers.com/tracking-down-errors-in-r/}{Pete Werner Blog Post (2013)}
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Exercise 3: Debugging}
\begin{itemize}
\item Load your package and the datasets. Correct the functions until\\
\rcode{lsc(calib\$P, calib\$Q, area=1.6)} returns the result below.
\item BONUS: commit each change to git.
\end{itemize}

<<PQ_lsc, echo=F, warning=F, fig.height=2.8>>=
qpfile <- system.file("extdata/Q_P.txt", package="berryFunctions")
qp <- read.table(qpfile, sep="\t", dec=",", header=TRUE)
calib <- qp[1:90, ]
valid <- qp[-(1:90), ]
lsc_cal <- berryFunctions::lsc(calib$P, calib$Q, area=1.6)
@
\end{frame}

%------------------------------------------------------------%

\begin{frame}[fragile]{Solutions to Exercise 3: Debugging}
\begin{itemize}
\item \rcode{stupid error you can easily remove} - traceback - find location of error - lsc\#75 - just comment it out
\item \rcode{harder to find but still stupid} - traceback - nse\#22 - ditto
\item \rcode{Error in plot: need finite 'ylim' value} - debug/browser/options(error=recover) - lsc\#107 - NAs in Q - range(Q, na.rm=TRUE) - also in other applicable locations
\item \rcode{There were 50 or more warnings} - come from rmse being called in optimization - add argument quietNA (or similar) to lsc that is passed to rmse in lsc\#81
\end{itemize}


\end{frame}

% ---------------------------

\section{Appendix}

% ---------------------------

\appendixbegin

% ---------------------------

\begin{frame}[fragile]{Version control with github}
\begin{itemize}[<+->]
\item Connect git to Rstudio (\href{http://kbroman.org/github_tutorial/}{kbroman.org/github\_tutorial})
\item github.com, log in, on "+" in top-right select "New repository", initialize with readme!
\item clone or download: copy link
\item Rstudio - file - new project - version control - git: paste url and create
\item \rcode{devtools::setup()}, choose option number to Overwrite 'mhmVis.Rproj'
\item Work. Commit. Push. Repeat.
\end{itemize}
\end{frame}

% ---------------------------

\begin{frame}[fragile]{More things}
\begin{itemize}[<+->]
\item ...
\end{itemize}
\end{frame}

% ---------------------------

\appendixend


\end{document}
