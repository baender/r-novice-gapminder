% Software carpentry Workshop GFZ Potsdam, May 2017. R Workshop parts by Berry
% Berry Boessenkool, Potsdam University, Germany
% berry-b@gmx.de

\documentclass[compress, xcolor=dvipsnames]{beamer}
\setbeamerfont{frametitle}{size=\normalsize}

\usepackage{hyperref, graphicx, tabu}
\usepackage[dvipsnames]{xcolor}
\renewcommand\appendixname{Appendix}
\usepackage[absolute,overlay]{textpos}
\hypersetup{colorlinks=true, linkcolor=blue, urlcolor=blue}
% \beamertemplatenavigationsymbolsempty
\setbeamertemplate{navigation symbols}[only frame symbol]
%\usetheme{Madrid}
\useoutertheme[subsection=false]{miniframes}
\beamersetleftmargin{0.5cm}
\beamersetrightmargin{0.5cm}
\let\Tiny=\tiny % avoid warning: Font shape `OT1/cmss/m/n' in size <4> not available. size <5> substituted on input line
\setbeamertemplate{footline}[frame number]

\beamersetleftmargin{0.3cm}
\beamersetrightmargin{0.3cm}

% Reference images:
\newcommand{\bildlink}[1]{\flushleft{\tiny \href{#1}{\textcolor{gray}{#1}} \normalsize }}
\newcommand{\bildlinkt}[2]{\flushleft{\tiny \href{#1}{\textcolor{gray}{#2}} \normalsize }}
% format inline R command names in blue courier:
\newcommand{\rcode}[1]{\texttt{\textcolor{Blue}{#1}}} % or use Blue

% Nice appendix numbering:
\newcommand{\appendixbegin}{
   \newcounter{framenumberappendix}
   \setcounter{framenumberappendix}{\value{framenumber}}
}
\newcommand{\appendixend}{
   \addtocounter{framenumberappendix}{-\value{framenumber}}
   \addtocounter{framenumber}{\value{framenumberappendix}} 
}



% ACTUAL SLIDES %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\centering


% ---------------------------

\section{Intro}

% ---------------------------

<<setup, include=FALSE>>=
opts_chunk$set(cache=T, echo=TRUE, fig.height=3.3, fig.width=5, out.width='0.9\\textwidth')
# set locale to US, which makes sure that eg month names are in english
# Sys.setlocale("LC_ALL", "US") # Windows
Sys.setlocale("LC_ALL","English")
Sys.setenv(LANG = "en") # english errors and warnings

ThemeBerry <- list(highlight="
\\definecolor{fgcolor}{rgb}{0, 0, 0}
\\newcommand{\\hlnum}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlstr}[1]{\\textcolor[rgb]{0.545,0.137,0.137}{#1}}
\\newcommand{\\hlcom}[1]{\\textcolor[rgb]{0,0.392,0}{\\textit{#1}}}
\\newcommand{\\hlopt}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlstd}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlkwa}[1]{\\textcolor[rgb]{1,0,0}{\\textbf{#1}}}
\\newcommand{\\hlkwb}[1]{\\textcolor[rgb]{0,0,0}{#1}}
\\newcommand{\\hlkwc}[1]{\\textcolor[rgb]{1,0,1}{#1}}
\\newcommand{\\hlkwd}[1]{\\textcolor[rgb]{0,0,1}{#1}}
", background="#F5F5F5", foreground="black")
knit_theme$set(ThemeBerry)
rm(ThemeBerry)
@


% ---------------------------

\begin{frame}%[plain]
\vspace{1em}
\Large
\textbf{Introduction to \\R, Rstudio \& \\Project Management} \\[2em]
\normalsize
Berry Boessenkool, \href{http://www.geo.uni-potsdam.de/geoecology.html}{uni-potsdam.de}, May 2017 \\[1em]
\texttt{berry-b@gmx.de}\\
\href{https://github.com/brry}{github.com/brry}\\[1em]
\href{https://swc-bb.github.io/2017-05-17-r-workshop}{swc-bb.github.io/2017-05-17-r-workshop}\\[1em]
\scriptsize
\textit{Presentation template generated with} \rcode{berryFunctions::createPres}\\
\normalsize

\only<2-3>{ % photography note and licence
\begin{textblock*}{8em}(260pt,30pt) % topleft corner x=250pt, y=30pt
\centering
\textblockcolour{Dandelion}
\vspace{0.5em}
\includegraphics[width=3em]{fig_extern/camera2.png}\\
\footnotesize
ENCOURAGED\\[0.5em]%
\onslide<3>{
\includegraphics[width=6em]{fig_extern/ccby.png}\\[-0.3em]
\href{https://creativecommons.org/licenses/by/4.0}{use freely, cite me}%
}
\normalsize
\vspace{0.5em}
\end{textblock*}
}

\end{frame}

% ---------------------------

\begin{frame}[fragile]{Survey}
knowledge survey to determine focus for this session\\
\LARGE
\href{https://bit.ly/knowR}{bit.ly/knowR}

\end{frame}

% ---------------------------

\section{Rstudio}

% ---------------------------

\begin{frame}{RStudio}
  \begin{figure}
  \includegraphics[width=0.92\textwidth]{./fig_extern/Rstudio.png}
  \end{figure}
\end{frame}

% ---------------------------

\begin{frame}{RStudio configuration}
\begin{flushleft}
\href{https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts}{keyboard shortcuts} (ALT+SHIFT+K)\\[1em]
\pause
Recommended settings for reproducible research under\\
\alert{Tools - Global Options - General}\\
\textbf{ON}: Restore previously open source documents at startup\\
\textbf{OFF}: Restore .Rdata into workspace at startup\\
Save workspace to .RData on exit: \textbf{NEVER}\\[0.5em]
\pause
\textit{Instead use \rcode{save(object, file="object.Rdata")} after long computations.
You can load them later with \rcode{load("object.Rdata")}.}\\[1em]
\pause
\alert{Tools - Global Options - Code - Display}\\
\textbf{ON}: Show margin (Margin column:80) ~~\textit{People hate horizontal scrolling!}\\[0.5em]
\alert{Tools - Global Options - Code - Saving}\\
Line ending conversion: \textbf{Windows (CR/LF)}
\end{flushleft}
\end{frame}

% ---------------------------

\section{R basics}

% ---------------------------

\begin{frame}[fragile]{Assignments}
\begin{itemize}[<+->]
  \item objects: assignment with ~ \rcode{$<-$} \\
        \rcode{nstudents <- 15\\nstudents\\nstudents > 12}
  \item Rstudio Keyboard shortcut:  \rcode{ALT} + \rcode{-} 
  \item What's a good object name? \onslide<+-> $\rightarrow$ short, but explanatory,
        \onslide<+-> lowerCamelStandard.or.dot\_or\_underscore are good naming conventions
  \item comments: \texttt{\textcolor[rgb]{0,0.392,0}{\# everything after a hashtag is not executed.}}

\end{itemize}
\end{frame}

% ---------------------------

\begin{frame}{Exercise}
\begin{itemize}
\item Open Rstudio, start new script. Write comments about what you do, save the file in a useful place.
\item Calculate ~ 21+21 ~,~ 7*6 ~ and ~ $\frac{0,3}{4}*\sqrt{313600}$
\item Is \rcode{0.5 - 0.2} equal to \rcode{0.3}?   Is  \rcode{0.4 - 0.1} equal to \rcode{0.3}?
      % Equality check with == only for integers. Use all.equal() in real life
\item With the \rcode{c} command, create a vector with body sizes of people around you. 
      You can also use the values 1.75, 1.76, 1.83, 1.84, 1.77, 1.76, 1.77, 1.66, 1.86, 1.76
\item What does \rcode{3:6} create? What does \rcode{YourObject[3:6]} do?
\item What does \rcode{YourObject[-4]} do?
\item BONUS (for fast people): Analyze the descriptive statistics: \rcode{mean(YourObject), median, min, max, range, quantile}
\item BONUS 2: Generate 150 random numbers from a normal distribution with $\mu=170 cm$ and $\sigma=8 cm$. 
      Perform a Kolmogorov-Smirnov test for normality of that sample.
\end{itemize}
\end{frame}

% ---------------------------

\section{File management}

% ---------------------------

\begin{frame}[fragile]{Reading files}
\begin{itemize}[<+->]
\item Copy the file \rcode{treesize.txt} (from \href{http://bit.ly/swc_tree}{bit.ly/swc\_tree})
\item Tell R where to look for it with: \rcode{setwd("C:/path/to/input")} \\
      \texttt{\textcolor[rgb]{0,0.392,0}{ \# change back- to forwardslashes}}
\item Read the file into R with the command \rcode{read.table}.
\item If R tells you "no such file" exists, check the output of \rcode{dir()}.
\item Use the documentation to find out the correct settings of the arguments:
      \rcode{help(read.table)}, \rcode{?read.table}, or press F1.
\item \rcode{str(YourObject)} must yield the column data types: \texttt{num, num, factor}.
\item You need to set the argument \texttt{header}.
\end{itemize}
% \vspace{-1em}
\onslide<+->
\vspace{-0.5em}
<<solreadfile, eval=F>>=
treesize <- read.table(file="treesize.txt", header=TRUE)
@
\end{frame}

% ---------------------------

\section{Objects}

% ---------------------------

\begin{frame}[fragile]{Objects}
\begin{itemize}[<+->]
\item Check the objects in your workspace with \rcode{ls()}.
\item Remove objects with \rcode{rm(YourObject, AnotherOne)}
\item Remove all objects with \rcode{rm(list=ls() )}
\item Or just the Rstudio button
\item To make sure your script is reproducible (you may rename objects, for example, and miss one occurrence):\\
      restart R (\rcode{CTRL} + \rcode{SHIFT} + \rcode{F10}) every once in a while
      (Make sure Rstudio settings are reproducible as shown on slide 4).
\end{itemize}
\end{frame}

%------------------------------------------------------------%

\begin{frame}{Overview: data types}
\begin{flushleft}
\scriptsize In order of coercion (if mixed, TRUE is converted to 1,~  3.14 to "3.14" etc)
\small
\begin{center}
\begin{tabu}{| l | l | l | l |}   \hline
Description      & example         & \rcode{typeof} & \rcode{class}      \\ \hline  \hline
empty set        & NULL                 & NULL      & NULL               \\ \hline
not available    & NA                   & logical   & logical            \\ \hline
logical          & c(T, F, FALSE, TRUE) & logical   & logical            \\ \hline
category         & factor("left")       & integer   & \textbf{factor}    \\ \hline
integer number   & 4:6                  & integer   & integer            \\ \hline
decimal          & 8.7                  & double    & \textbf{numeric}   \\ \hline
complex          & 5+3i                 & complex   & complex            \\ \hline
character string & "homer rocks"        & character & character          \\ \hline
time             & Sys.time()           & double    & \textbf{POSIXct}   \\ \hline
date             & as.Date("2017-05-02")& double    & \textbf{Date}      \\ \hline
function         & ncol                 & closure   & \textbf{function}  \\ \hline
\end{tabu}
\end{center}
\scriptsize
\pause 
\href{http://adv-r.had.co.nz/Data-structures.html}{adv-r.had.co.nz/Data-structures}. 
\pause
%See also e.g. Uwe Ligges (2006) - Programmieren mit R\\
\rcode{as.character}\texttt{(3.14)} converts a data type;  \pause \rcode{is.integer}\texttt{(4:6)} checks. \pause
\rcode{str} shows an abbreviation of \rcode{class}. \pause
\rcode{mode} (for users) is like \rcode{typeof} (R internal), but combines 
integer and double to numeric (\& closure, special and builtin to function). \pause 
% Other rare typeofs: raw, environment, promise, ... \pause 
When mixing date/time with others, the order of appearance determines the output class.
\label{datatypes}
\end{flushleft}
\end{frame}

%------------------------------------------------------------%

\begin{frame}{Overview: Object types}
\begin{flushleft}
\begin{center}
%\begin{tabu}{| l | m{4cm} | m{3cm} | l |}  \hline
\begin{tabu}{| l | l | l | l |}  \hline
Object     & example                                   & \rcode{typeof}      & \rcode{class}\\ \hline   \hline
vector     & \textit{see data types}                   & ...                 & ...          \\ \hline
matrix     & matrix(9:15, ncol=2)                      & ...                 & matrix       \\ \hline
array      & array(letters[1:24], dim=c(2,6,4))        & ...                 & array        \\ \hline
data.frame & \small data.frame(C1=4:5, C2=c("a","b"))  & list                & data.frame   \\ \hline
list       & list(el1=7:15, el2="big")                 & list                & list         \\ \hline
function   & function(x) 12+0.5*x                      & closure             & function     \\ \hline
...        & lm(b $\sim$ a)                            & list                & lm           \\ \hline
\end{tabu}
\end{center}
\small
\vspace{0.5em}
\pause A \rcode{matrix} consists of only one data type. 
If you accidentally change one element to a character, all are converted and calculations are not possible any more
(See coercion order in previous slide).\\
\pause \rcode{data.frame}s can have multiple data types, but a column in itself also has only one type.\\
\pause \rcode{list}s can combine anything, even other lists.\\
\pause \rcode{is.atomic}\texttt{(Object)} returns TRUE (vector, matrix, array) or FALSE\\
\pause \rcode{as.matrix}\texttt{(Object)} converts the class of an object by force.
\end{flushleft}
\end{frame}

% ---------------------------

\section{Packages}

% ---------------------------

\begin{frame}[fragile]{R Packages}
\begin{itemize}[<+->]
\item Many people write code for specific tasks and publish it on CRAN, the Comprehensive R Archive Network
\item Packages for a range of topics: \href{http://cran.r-project.org/web/views/}{cran.r-project.org/web/views}
\item All $>$10'500 available packages: \href{http://cran.r-project.org/web/packages/}{cran.r-project.org/web/packages}
\item \rcode{install.packages("ggplot2")} to download and install.\\ 
      \footnotesize (only needs to be executed once, works on user level, no admin rights required)\\
      You can do this in Rstudio \normalsize
\item \rcode{library("ggplot2")} to load it \\
      \footnotesize (needed in every new R session) Put this in the script for reproducibility \normalsize
\item Better to use the \rcode{package::function} syntax
\item Regularly run \rcode{update.packages()} or use the Rstudio button
\item Rarely needed: \rcode{remove.packages("packagename")}
\end{itemize}
\end{frame}

% ---------------------------

\section{Regression}

% ---------------------------

\begin{frame}[fragile]{Linear Regression}
\begin{itemize}[<+->]
\item Install and load the package \rcode{berryFunctions}
\item How can we pass the treesize data to \rcode{?linReg} with a formula?
\item Describe the resulting graph (height vs age).
\item Look into the source code of \rcode{linReg}. What is actually the backbone for the calculation of the function?
\item Feed the data into \rcode{lm}, assign the output to an object (useful name!).
\item Briefly explain the \rcode{summary} of the linear model.
\end{itemize}
\end{frame}
% ---------------------------

\section{Appendix}

% ---------------------------

\appendixbegin

%------------------------------------------------------------%

\begin{frame}{Objects: data.frames}
\begin{itemize}
  \item For tables with different data types (numbers, characters, categories, integers), 
        R has the object type data.frame: \\ \rcode{data.frame(count=c(2,6,5), type=c("a","k","k"))}
  \item \rcode{read.table} also returns a data.frame
  \item If we have the object \rcode{df}, we can subset with \rcode{df[rows,columns]}
  \item \rcode{df[1,2:4]; df[2, ]; df[ ,"name"]; df\$name}
  \item Logical values: \rcode{vect[c(TRUE,TRUE,FALSE,FALSE,TRUE,FALSE)]}
\end{itemize}
\pause
\begin{flushleft}
From the dataset \rcode{treesize} from the previous exercise, obtain:\end{flushleft} \vspace{-0.8em}
\begin{itemize}
  \item The first 5 values in column 2
  \item The maximum "Height" (the maximum of the values in that column)
  \item For each entry: is the measurement equal to (\rcode{==}) A?
  \item BONUS 1: The height entries for trees older than 23.5 years
  \item BONUS 2: All rows, excluding rows 3, 7,8,9,...,20
\end{itemize}
\end{frame}

% ---------------------------

\appendixend


\end{document}